// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210208175947_KonstruktorPredmet")]
    partial class KonstruktorPredmet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Entities.Predmet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("doporucenyRocnik")
                        .HasColumnType("INTEGER");

                    b.Property<string>("doporucenySemestr")
                        .HasColumnType("TEXT");

                    b.Property<string>("katedra")
                        .HasColumnType("TEXT");

                    b.Property<int?>("kreditu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nazev")
                        .HasColumnType("TEXT");

                    b.Property<int?>("oborIdNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("rok")
                        .HasColumnType("TEXT");

                    b.Property<string>("rozsah")
                        .HasColumnType("TEXT");

                    b.Property<string>("statut")
                        .HasColumnType("TEXT");

                    b.Property<string>("typZk")
                        .HasColumnType("TEXT");

                    b.Property<string>("vyukaLS")
                        .HasColumnType("TEXT");

                    b.Property<string>("vyukaZS")
                        .HasColumnType("TEXT");

                    b.Property<string>("vyznamPredmetu")
                        .HasColumnType("TEXT");

                    b.Property<string>("zkratka")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Predmets");
                });

            modelBuilder.Entity("API.Entities.Soubor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PredmetID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PredmetID");

                    b.ToTable("Soubor");
                });

            modelBuilder.Entity("API.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("datumRegistrace")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<int>("oborIdno")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("BLOB");

                    b.Property<int>("rocnikRegistrace")
                        .HasColumnType("INTEGER");

                    b.Property<string>("upolNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("API.Entities.Soubor", b =>
                {
                    b.HasOne("API.Entities.Predmet", "Predmet")
                        .WithMany("Files")
                        .HasForeignKey("PredmetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");
                });

            modelBuilder.Entity("API.Entities.Predmet", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
